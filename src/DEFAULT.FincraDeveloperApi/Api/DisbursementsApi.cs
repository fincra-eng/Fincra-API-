/* 
 * Fincra Developer Api
 *
 * * * *  Our API reference will introduce you to all the basic information you need to better understand and integrate with our products.  With our API you can access endpoints that enable you to perform actions such as payouts, currency conversion, creating and maintaining a virtual account for your self/customers, depending on your scope.  In summary, our API gives you access to pretty much all and more features you can use on our dashboard and lets you extend them for use in your application.  ### APIs available are:  *   **Virtual Account**: Create a USD,EUR, GBP & NGN bank account/IBAN and receive payments in a country’s local currency from any part of the world. *   **Sub-Account**: Create and manage accounts for your customers. *   **Beneficiaries**: Manage frequent recipients. *   **Quote**: Get real-time rates for payouts to all supported currencies. *   **Conversion**: Allows you to convert from one currency to another. *   **Payout**: Make seamless cross-currency and single-currency payouts through our API. *   **Transactions**: Manage all transactionntransactionss *   **Wallets**: Manage multi-currency wallet balances.       Whether you’re a financial institution, a fintech, or a global business, you can integrate our APIs into your existing platform .  * * *  # Environment URLS  The Fincra API is available in both Production as well as Sandbox environment. Please find the corresponding URLs below  ##### Sandbox  {{host}} : [https://sandboxapi.fincra.com](https://sandboxapi.fincra.com)  * * *  # Authentication  Fincra authenticates your API requests using your account’s API key. If you do not include your key when making an API request or use one that is incorrect, Fincra will return an error.  ##### Obtaining your API Keys:  Your API key is available on your dashboard. On the web application, navigate to `Settings -> API keys` to view and copy your API key.  ##### Authenticating Requests:  To hit our endpoints, you'll need to add to your header, `-H \"`**`api-key`**`: your_api_key\"`.  ##### Obtaining Business ID:  You would find that a lot of the endpoint requires the ID of your business. To get the business ID, click <a href=\"https://documenter.getpostman.com/view/10721039/Tz5m7zMw#173cf362-e111-458f-86ee-801489eaef8d\">here</a> or send a GET request to this endpoint \"{{host}}/profile/business/me\"  The endpoint returns a business object and the ID of the object is your business ID.  * * *  # Versioning  When backward-incompatible changes are made to the API, a new, dated version is released. Minor updates and bug fixes are occasionally released without incrementing the version number  It is important to note that we are continually improving and adding new features to improve our services.  * * *  # Deprecation policy  API deprecation is used to inform you that some APIs are no longer recommended for use in your applications. The Fincra team is trying to keep the API as stable as possible, but sometimes APIs must be deprecated due to, for example, critical security issues, or new and better alternatives.  Based on a careful analysis, the following deprecation policy has been adopted in Fincra:  *   The functionality of the deprecated API is available for 2 releases and are therefore only removed after 2 releases. *   During the 2 version releases, the functionality of the deprecated API may also be removed immediately for security reasons or as an unavoidable part of the platform evolution. *   Alternatives must be described within the reference of the deprecated API, if possible. *   All version changes are considered 1 release for purposes of the deprecation policy.       * * *  # API rate limiting  To make our APIs more scalable we have integrated rate limiting on each of our APIs. The frequency in http requests allowed on our APIs is 100 requests over any 1-minute interval.  * * *  # Webhook  We use webhooks to provide you the ability to receive real-time notifications when an event happens on your account. These events could range from a successful transaction to a failed transaction.  Examples of events that you could be notified on include:  *   When you receive a settlement transaction. *   When you performed a successful payout transaction.       You could use webhooks to  *   Update your database when the status of a pending payment is updated to successful. *   Email a customer when payment is successful or fails.       In order to receive these notifications, you need the following:  *   An endpoint on your server that will be called by us to send you notifications *   Webhook enabled on your Fincra dashboard.       ### How to enable webhooks on your dashboard  To enable webhook, kindly follow the steps below:  *   Log into your Fincra dashboard. *   Click on settings icon on the left to access the Settings page. *   Click **API key & Webhook** tab of the **Settings** page. *   Paste the url of your server endpoint in the appropriate callback URL field, save and you are good to go.       ### Sample Webhook Response Data  The data sent to the webhook url differs depending on the type of transaction carried out and the type of transactions available include Payout, Settlement, Collection and Conversion.  Kindly find below sample webhook responses:  **Response for successful virtual account approval**  ``` json {   \"event\": \"virtualaccount.approved\",   \"data\": {     \"id\": \"61769013cff5311964f3f6cf\",     \"business\": \"61768caacff5315c34f3f6a3\",     \"isSubAccount\": true,     \"currency\": \"GBP\",     \"currencyType\": \"fiat\",     \"status\": \"approved\",     \"accountType\": \"individual\",     \"accountInformation\": {       \"accountNumber\": \"GBXXCLJU04130780008933\",       \"bankName\": null,       \"bankCode\": \"CLJU\",       \"countryCode\": \"GB\",       \"otherInfo\": {         \"iban\": \"GBXXCLJU04130780008933\",         \"accountNumber\": \"80008933\",         \"checkNumber\": \"XX\",         \"sortCode\": \"041307\",         \"bankSwiftCode\": null       }     },     \"accountOpeningFee\": 0,     \"isPermanent\": true,     \"createdAt\": \"2021-10-25T11:08:03.442Z\",     \"updatedAt\": \"2021-10-25T11:21:32.861Z\"   } }  ```  **Response for declined virtual account**  ``` json {   {   \"event\": \"virtualaccount.declined\",   \"data\": {     \"id\": \"6176a0cfcff53106ebf3f77e\",     \"business\": \"61768caacff5315c34f3f6a3\",     \"isSubAccount\": true,     \"currency\": \"EUR\",     \"currencyType\": \"fiat\",     \"status\": \"declined\",     \"accountType\": \"individual\",     \"reason\": \"declined for compliance reason\",     \"accountOpeningFee\": 0,     \"createdAt\": \"2021-10-25T12:19:27.278Z\",     \"updatedAt\": \"2021-10-25T12:20:17.356Z\"   } } }  ```  **Response for successful payout**  ``` json {    \"event\":\"payout.successful\",    \"data\": {       \"amountCharged\": 200000,       \"amountReceived\": 1500       \"fees\": 15,       \"sourceCurrency\": \"NGN\",       \"destinationCurrency\": \"GHS\",       \"recipient\":  {         \"name\": \"Hassan Sarz\",         \"accountNumber\": \"0124775489\",         \"type\": \"individual\",         \"email\": \"aa@aa.com\",       },       \"paymentScheme\": null,       \"paymentDestination\": \"bank_account\",       \"rate\": 85       \"status\": \"successful\",       \"createdAt\": \"2021-03-02T17:00:31.742Z\",       \"updatedAt\":\"2021-03-02T17:00:31.742Z\",       \"reference\": \"7303c7fb-a487-4abb-9e80-a5be8722639a\"     } }  ```  **Response for failed payout**  ``` json {    \"event\":\"payout.failed\",    \"data\": {       \"amountCharged\": 200000,       \"amountReceived\": 1500       \"fees\": 15,       \"sourceCurrency\": \"NGN\",       \"destinationCurrency\": \"GHS\",       \"recipient\":  {         \"name\": \"Hassan Sarz\",         \"accountNumber\": \"0124775489\",         \"type\": \"individual\",         \"email\": \"aa@aa.com\",       },       \"paymentScheme\": null,       \"paymentDestination\": \"bank_account\",       \"rate\": 85       \"status\": \"failed\",       \"message\": \"A reason for the failure\"       \"createdAt\": \"2021-03-02T17:00:31.742Z\",       \"updatedAt\":\"2021-03-02T17:00:31.742Z\",       \"reference\": \"7303c7fb-a487-4abb-9e80-a5be8722639a\"     } }  ```  **Response for failed conversion**  ``` json {    \"event\":\"conversion.failed\",    \"data\": {       \"amountCharged\": 200000,       \"amountReceived\": 1500       \"fees\": 15,       \"sourceCurrency\": \"USD\",       \"destinationCurrency\": \"NGN\",       \"rate\": 85       \"settlement\": 5262gs767h828       \"status\": \"failed\",       \"createdAt\": \"2021-03-02T17:00:31.742Z\",       \"updatedAt\":\"2021-03-02T17:00:31.742Z\",       \"reference\": \"7303c7fb-a487-4abb-9e80-a5be8722639a\"     } }  ```  **Response for successful settlement**  ``` json {    \"event\":\"settlement.successful\",    \"data\": {       \"amount\": 15000000       \"sourceCurrency\": \"USD\",       \"destinationCurrency\": \"NGN\",       \"recipient\":  {         \"name\": \"Hassan Sarz\",         \"accountNumber\": \"0124775489\",         \"type\": \"individual\",         \"email\": \"aa@aa.com\",       },       \"settlementDestination\": \"bank_account\",       \"settlementTime\": \"T+2\"       \"rate\": 480       \"status\": \"successful\",       \"transactionType\": \"collection\"       \"transaction\": \"123rde2e3243\"       \"createdAt\": \"2021-03-02T17:00:31.742Z\",       \"updatedAt\":\"2021-03-02T17:00:31.742Z\",       \"settlementDate\": \"2021-03-02T17:00:31.742Z\",       \"settledAt\": \"2021-03-02T17:00:31.742Z\"       \"reference\": \"7303c7fb-a487-4abb-9e80-a5be8722639a\"       \"business\": 782y87e72982     } }  ```  **Response for successful collection**  ``` json {   \"event\": \"collection.successful\",   \"data\": {     \"business\": \"6065958518d58020f20b71f3\",     \"_id\": \"609853394ea00b5246086de4\",     \"sourceCurrency\": \"GBP\",     \"destinationCurrency\": \"GBP\",     \"sourceAmount\": 210.55,     \"destinationAmount\": 210.55,     \"fee\": 0,     \"customerName\": \"Alan ross\",     \"settlementDestination\": \"fincra_wallet\",     \"status\": \"successful\",     \"initiatedAt\": \"2017-09-05T10:37:15.000Z\",     \"createdAt\": \"2021-05-09T21:25:13.393Z\",     \"updatedAt\": \"2021-05-09T22:06:29.201Z\",     \"reference\": \"4cbf9122-d272-47fa-8f09-39e538f6ed35\"   } }  ```  N.B: You should expect a POST request from us when we send you a webhook.  * * *  # Supported Currencies  We will breakdown the supported currencies into the transaction type(conversion, collection, disbursement) we support. They are:  **Conversion:** The supported currencies for conversions can be broken down into:  **Supported conversion source currency**  | S/N | Currency Name | Currency Code | | --- | --- | --- | | 1 | United State Dollar | USD | | 2 | Euro | EUR | | 3 | Nigerian Naira | NGN | | 4 | British Pound | GBP |  **Supported conversion destination currency**  | S/N | Currency Name | Currency Code | | --- | --- | --- | | 1 | United State Dollar | USD | | 2 | Euro | EUR | | 3 | Nigerian Naira | NGN | | 4 | British Pound | GBP |  Therefore this is the breakdown of the currency pairs we support  ``` json {     \"currencyPairs\": [         \"USD-NGN\",         \"GBP-NGN\",         \"EUR-NGN\",         \"EUR-USD\",         \"GBP-USD\",         \"GBP-EUR\",     ] }  ```  **Disbursement:** The supported currencies for disbursements(payouts) can be broken down into:  **Supported disbursement source currency**  | S/N | Currency Name | Currency Code | Payment Scheme(s) | | --- | --- | --- | --- | | 1 | United State Dollar | USD | SWIFT `Required` | | 2 | Euro | EUR | SEPA,SEPA_instant,SWIFT `Required` | | 3 | Nigerian Naira | NGN |  | | 4 | British Pound | GBP | FPS,CHAPS,SWIFT `Required` |  **Note** : If destination currency is either USD,EUR,GBP a payment scheme is required  **Supported disbursement destination currency**  | S/N | Currency Name | Currency Code | | --- | --- | --- | | 1 | United State Dollar | USD | | 2 | Euro | EUR | | 3 | Nigerian Naira | NGN | | 4 | British Pound | GBP |
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using DEFAULT.FincraDeveloperApi.Client;

namespace DEFAULT.FincraDeveloperApi.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDisbursementsApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get all settlements for a Business
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns></returns>
        void GetallsettlementsforaBusiness (string businessID);

        /// <summary>
        /// Get all settlements for a Business
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetallsettlementsforaBusinessWithHttpInfo (string businessID);
        /// <summary>
        /// Get a settlement for a business
        /// </summary>
        /// <remarks>
        /// This endpoint provides the details of a settlement through the use of its ID.        
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns></returns>
        void Getasettlementforabusiness (string settlementId);

        /// <summary>
        /// Get a settlement for a business
        /// </summary>
        /// <remarks>
        /// This endpoint provides the details of a settlement through the use of its ID.        
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> GetasettlementforabusinessWithHttpInfo (string settlementId);
        /// <summary>
        /// Make A Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void MakeAPayout ();

        /// <summary>
        /// Make A Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> MakeAPayoutWithHttpInfo ();
        /// <summary>
        /// Make  An Internal  Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void MakeAnInternalPayout ();

        /// <summary>
        /// Make  An Internal  Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> MakeAnInternalPayoutWithHttpInfo ();
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Get all settlements for a Business
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetallsettlementsforaBusinessAsync (string businessID);

        /// <summary>
        /// Get all settlements for a Business
        /// </summary>
        /// <remarks>
        /// This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetallsettlementsforaBusinessAsyncWithHttpInfo (string businessID);
        /// <summary>
        /// Get a settlement for a business
        /// </summary>
        /// <remarks>
        /// This endpoint provides the details of a settlement through the use of its ID.        
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task GetasettlementforabusinessAsync (string settlementId);

        /// <summary>
        /// Get a settlement for a business
        /// </summary>
        /// <remarks>
        /// This endpoint provides the details of a settlement through the use of its ID.        
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> GetasettlementforabusinessAsyncWithHttpInfo (string settlementId);
        /// <summary>
        /// Make A Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task MakeAPayoutAsync ();

        /// <summary>
        /// Make A Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> MakeAPayoutAsyncWithHttpInfo ();
        /// <summary>
        /// Make  An Internal  Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task MakeAnInternalPayoutAsync ();

        /// <summary>
        /// Make  An Internal  Payout
        /// </summary>
        /// <remarks>
        /// This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </remarks>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> MakeAnInternalPayoutAsyncWithHttpInfo ();
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DisbursementsApi : IDisbursementsApi
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DisbursementsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DisbursementsApi(String basePath)
        {
            this.Configuration = new Configuration(new ApiClient(basePath));

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DisbursementsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DisbursementsApi(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public Dictionary<String, String> DefaultHeader()
        {
            return this.Configuration.DefaultHeader;
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Get all settlements for a Business This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns></returns>
        public void GetallsettlementsforaBusiness (string businessID)
        {
             GetallsettlementsforaBusinessWithHttpInfo(businessID);
        }

        /// <summary>
        /// Get all settlements for a Business This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetallsettlementsforaBusinessWithHttpInfo (string businessID)
        {
            // verify the required parameter 'businessID' is set
            if (businessID == null)
                throw new ApiException(400, "Missing required parameter 'businessID' when calling DisbursementsApi->GetallsettlementsforaBusiness");

            var localVarPath = "/disbursements/settlements/search/business/{businessID}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (businessID != null) localVarPathParams.Add("businessID", Configuration.ApiClient.ParameterToString(businessID)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling GetallsettlementsforaBusiness: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling GetallsettlementsforaBusiness: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Get all settlements for a Business This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetallsettlementsforaBusinessAsync (string businessID)
        {
             await GetallsettlementsforaBusinessAsyncWithHttpInfo(businessID);

        }

        /// <summary>
        /// Get all settlements for a Business This endpoint provides a list of all the settlements for a business.   REQUEST BODY   | Field | Data Type | Description | |------| ------------- | ----------- | | page | string | Specify exactly what page you want to retrieve optional| | perPage | string | Specify how many records you want to retrieve per page optional| | from | string| Specify start date with format \&quot;YYYY-mm-dd\&quot;  optional| | to | string| Specify end date with format \&quot;YYYY-mm-dd\&quot; optional|  
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="businessID">businessID</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetallsettlementsforaBusinessAsyncWithHttpInfo (string businessID)
        {
            // verify the required parameter 'businessID' is set
            if (businessID == null)
                throw new ApiException(400, "Missing required parameter 'businessID' when calling DisbursementsApi->GetallsettlementsforaBusiness");

            var localVarPath = "/disbursements/settlements/search/business/{businessID}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (businessID != null) localVarPathParams.Add("businessID", Configuration.ApiClient.ParameterToString(businessID)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling GetallsettlementsforaBusiness: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling GetallsettlementsforaBusiness: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Get a settlement for a business This endpoint provides the details of a settlement through the use of its ID.        
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns></returns>
        public void Getasettlementforabusiness (string settlementId)
        {
             GetasettlementforabusinessWithHttpInfo(settlementId);
        }

        /// <summary>
        /// Get a settlement for a business This endpoint provides the details of a settlement through the use of its ID.        
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> GetasettlementforabusinessWithHttpInfo (string settlementId)
        {
            // verify the required parameter 'settlementId' is set
            if (settlementId == null)
                throw new ApiException(400, "Missing required parameter 'settlementId' when calling DisbursementsApi->Getasettlementforabusiness");

            var localVarPath = "/disbursements/settlements/{settlementId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (settlementId != null) localVarPathParams.Add("settlementId", Configuration.ApiClient.ParameterToString(settlementId)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling Getasettlementforabusiness: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling Getasettlementforabusiness: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Get a settlement for a business This endpoint provides the details of a settlement through the use of its ID.        
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task GetasettlementforabusinessAsync (string settlementId)
        {
             await GetasettlementforabusinessAsyncWithHttpInfo(settlementId);

        }

        /// <summary>
        /// Get a settlement for a business This endpoint provides the details of a settlement through the use of its ID.        
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="settlementId">settlementId</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> GetasettlementforabusinessAsyncWithHttpInfo (string settlementId)
        {
            // verify the required parameter 'settlementId' is set
            if (settlementId == null)
                throw new ApiException(400, "Missing required parameter 'settlementId' when calling DisbursementsApi->Getasettlementforabusiness");

            var localVarPath = "/disbursements/settlements/{settlementId}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (settlementId != null) localVarPathParams.Add("settlementId", Configuration.ApiClient.ParameterToString(settlementId)); // path parameter


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling Getasettlementforabusiness: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling Getasettlementforabusiness: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Make A Payout This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void MakeAPayout ()
        {
             MakeAPayoutWithHttpInfo();
        }

        /// <summary>
        /// Make A Payout This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> MakeAPayoutWithHttpInfo ()
        {

            var localVarPath = "/disbursements/payouts";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling MakeAPayout: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling MakeAPayout: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Make A Payout This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task MakeAPayoutAsync ()
        {
             await MakeAPayoutAsyncWithHttpInfo();

        }

        /// <summary>
        /// Make A Payout This endpoint is used for making a payment out to the beneficiaries of the business who are not registered on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | sourceCurrency | string | The currency which the business is to send payment in &#x60;required&#x60; | | destinationCurrency | string | The currency which the beneficiary is to receive payment in&#x60;required&#x60; | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform &#x60;optional&#x60; | | beneficiary | object | See the description of the beneficiary object below&#x60;required&#x60; | | paymentDestination | string | This is where the payment is to be made. the value will be one of the following: *bank_account*, *mobile_money_wallet* &#x60;required&#x60; | | quoteReference | string | This is required if the payout is a cross currency payout(e.g, NGN to USD). If this is a single currency payout (e.g, EUR to EUR), a quote reference is not required. To get a quote reference, you will need to call the generate quote endpoint below | | paymentScheme | string | This is the valid payment scheme for the destination currency.Payment scheme is required for all USD,EUR and GBP payouts |  The beneficiaries information varies based on the currency and beneficiary type (individual or corporate). Find the breakdown of the beneficiaries object below:  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;NGN&#x60; and &#x60;KES&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; or &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GHS&#x60; and &#x60;ZAR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; if type is **individual** and &#x60;optional&#x60; if type is **corporate** | | firstName | string | The first name of the beneficiary if type is **individual** or the name of the corporation if type is **corporate** &#x60;required&#x60; | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This is the bank account number of the beneficiary or phone number if the account is a mobile money wallet. &#x60;required&#x60; | | bankCode | string | This value is either the code for your bank or mobile money wallet provider. To get this value, you will need to call the get bank code endpoint below &#x60;required&#x60; | | sortCode(branchCode) | string | To get this code, you will need to call the get bank branch endpoint below &#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;EUR&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This value of this field will be IBAN of the beneficiary. Depending on the country, the IBAN is mostly made up of the following format: *Country code + check digits + bank code + sort code + account number*. Kindly visit this page to see the IBAN format for different countries.&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;GBP&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;optional&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;CORPORATE&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | registrationNumber | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |  Description of &#x60;INDIVIDUAL&#x60; Beneficiary information for &#x60;USD&#x60; payout:  | Field | Data Type | description | | --- | --- | --- | | lastName | string | The last name of the beneficiary. it is &#x60;required&#x60; | | firstName | string | The first name of the beneficiary | | accountHolderName | string | This is the name on the bank account of the beneficiary. &#x60;required&#x60; | | accountNumber | string | This should be the beneficiary&#39;s account number&#x60;required&#x60; | | type | string | the value can either be **individual** or **corporate** &#x60;required&#x60; | | country | string | &#x60;optional&#x60; | | email | string | &#x60;optional&#x60; | | mobile | string | &#x60;optional&#x60; | | bankSwiftCode | string | &#x60;required&#x60; | | sortCode | string | &#x60;required&#x60; | | birthDate | string | &#x60;optional&#x60; | | birthPlace | string | &#x60;optional&#x60; | | address | object | This contains all the optional address information. They are:    \\+ country: country of origin &#x60;optional&#x60;  \\+ zip &#x60;optional&#x60;  \\+ street &#x60;optional&#x60;  \\+ state &#x60;optional&#x60;  \\+ city &#x60;optional&#x60; | | document | object | This contains the optional information in your means of identification. They are:    \\+ type: type of ID document e.g International Passport &#x60;optional&#x60;  \\+ number &#x60;optional&#x60;  \\+ issuedCountryCode e.g NG &#x60;optional&#x60;  \\+ issuedBy &#x60;optional&#x60;  \\+ issuedDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60;  \\+ expirationDate with Format \&quot;YYYY-mm-dd\&quot; &#x60;optional&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> MakeAPayoutAsyncWithHttpInfo ()
        {

            var localVarPath = "/disbursements/payouts";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling MakeAPayout: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling MakeAPayout: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Make  An Internal  Payout This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void MakeAnInternalPayout ()
        {
             MakeAnInternalPayoutWithHttpInfo();
        }

        /// <summary>
        /// Make  An Internal  Payout This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> MakeAnInternalPayoutWithHttpInfo ()
        {

            var localVarPath = "/disbursements/payouts/wallets";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling MakeAnInternalPayout: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling MakeAnInternalPayout: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Make  An Internal  Payout This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task MakeAnInternalPayoutAsync ()
        {
             await MakeAnInternalPayoutAsyncWithHttpInfo();

        }

        /// <summary>
        /// Make  An Internal  Payout This endpoint is used for making a payment out to a customer/user/subaccount on our platform  REQUEST BODY  * * *  | Field | Data Type | description | | --- | --- | --- | | amount | string | The amount to be paid out&#x60;required&#x60; | | business | string | This could be the ID of the business or the ID of a sub-account of the business &#x60;required&#x60; | | customerReference | string | This is the unique reference generated for the transaction on your platform. &#x60;required&#x60; | | description | string | &#x60;required&#x60; | | beneficiaryWalletNumber | string | This is the unique wallet of the beneficiary you want to pay to &#x60;required&#x60; |
        /// </summary>
        /// <exception cref="DEFAULT.FincraDeveloperApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> MakeAnInternalPayoutAsyncWithHttpInfo ()
        {

            var localVarPath = "/disbursements/payouts/wallets";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (localVarStatusCode >= 400)
                throw new ApiException (localVarStatusCode, "Error calling MakeAnInternalPayout: " + localVarResponse.Content, localVarResponse.Content);
            else if (localVarStatusCode == 0)
                throw new ApiException (localVarStatusCode, "Error calling MakeAnInternalPayout: " + localVarResponse.ErrorMessage, localVarResponse.ErrorMessage);

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

    }
}
